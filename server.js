/*import express from "express";
import cors from "cors";
import bodyParser from "body-parser";
import fetch from "node-fetch"; // –µ—Å–ª–∏ Node < 18, –∏–Ω–∞—á–µ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å
import path from "path";
import { fileURLToPath } from "url";

//const cors = require("cors");
const app = express();

const TOKEN = "8310915910:AAEEFuc_k3UzuvFyFt-c-bhhRJ3e-nVB5-I";
//const CHAT_ID = "6094425741";
const CHAT_ID = "6094425741";

app.use(express.static("public"));

app.use(cors({
    origin: "https://kreedak.github.io",
    methods: ["GET", "POST", "OPTIONS"],
    allowedHeaders: ["Content-Type"]
}));

// –û—Ç–¥–∞—ë–º index.html –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ /
app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname, "public", "index.html"));
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
app.post("/order", express.json(), async (req, res) => {
    console.log("–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ 4545:", req.body);
    const order = req.body;
    const text = `üçï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n–ò–º—è: ${order.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}\n–ê–¥—Ä–µ—Å: ${order.address}\n–ü–∏—Ü—Ü–∞: ${order.pizza}\n–†–∞–∑–º–µ—Ä: ${order.size}\n–¶–µ–Ω–∞: ${order.price}`;
    //const text = `üçï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n–ü–∏—Ü—Ü–∞: ${order.name}\n–†–∞–∑–º–µ—Ä: ${order.size}\n–ê–¥—Ä–µ—Å: ${order.address}`;
    try {
        const response = await fetch(
            `https://api.telegram.org/bot8310915910:AAEEFuc_k3UzuvFyFt-c-bhhRJ3e-nVB5-I/sendMessage`,
            {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    chat_id: CHAT_ID,
                    text: text,
                }),
            }
            );

        const data = await response.json();
        console.log("–û—Ç–≤–µ—Ç –æ—Ç Telegram:", data);

        res.json({ success: true, message: "–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω!" });
    } 
    catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", error);
        res.status(500).json({ success: false, error: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑" });
    }
});

app.options("*", cors())

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});*/







import express from "express";
import cors from "cors";

const app = express();

// --- CORS: —Å–Ω–∞—á–∞–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–∏–º, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å ---
app.use(cors()); // –≤—Ä–µ–º–µ–Ω–Ω–æ –≤—Å–µ–º —Ä–∞–∑—Ä–µ—à–∞–µ–º, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
// –ï—Å–ª–∏ –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî —Å—É–∑–∏–º origin –Ω–∏–∂–µ.

app.use(express.json());

// –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã
app.get("/", (_req, res) => {
    res.json({ ok: true, msg: "Root alive" });
});

// preflight –Ω–∞ –∫–æ—Ä–µ–Ω—å –∏ /order
app.options("/", cors());
app.options("/order", cors());

// –æ—Å–Ω–æ–≤–Ω–æ–π POST
app.post("/order", (req, res) => {
    console.log("ORDER BODY:", req.body);
    res.json({ ok: true, received: req.body });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});